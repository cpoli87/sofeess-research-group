
@article{montandonWhatSkillsIT2021,
  title = {What Skills Do {{IT}} Companies Look for in New Developers? {{A}} Study with {{Stack Overflow}} Jobs},
  shorttitle = {What Skills Do {{IT}} Companies Look for in New Developers?},
  author = {Montandon, Jo{\~a}o Eduardo and Politowski, Cristiano and Silva, Luciana Lourdes and Valente, Marco Tulio and Petrillo, Fabio and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
  year = {2021},
  month = jan,
  journal = {Information and Software Technology},
  volume = {129},
  pages = {106429},
  issn = {09505849},
  doi = {10.1016/j.infsof.2020.106429},
  abstract = {Context: There is a growing demand for information on how IT companies look for candidates to their open positions. Objective: This paper investigates which hard and soft skills are more required in IT companies by analyzing the description of 20,000 job opportunities. Method: We applied open card sorting to perform a highlevel analysis on which types of hard skills are more requested. Further, we manually analyzed the most mentioned soft skills. Results: Programming languages are the most demanded hard skills. Communication, collaboration, and problem-solving are the most demanded soft skills. Conclusion: We recommend developers to organize their resum\textasciiacute e according to the positions they are applying. We also highlight the importance of soft skills, as they appear in many job opportunities.},
  langid = {english},
  annotation = {9 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/montandonWhatSkillsIT2021-zotero.md;/home/polako/Zotero/storage/66B9AZKQ/Montandon et al. - 2021 - What skills do IT companies look for in new develo.pdf}
}

@article{politowskiAreGameEngines2021b,
  title = {Are Game Engines Software Frameworks? {{A}} Three-Perspective Study},
  shorttitle = {Are Game Engines Software Frameworks?},
  author = {Politowski, Cristiano and Petrillo, Fabio and Montandon, Jo{\~a}o Eduardo and Valente, Marco Tulio and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
  year = {2021},
  month = jan,
  journal = {Journal of Systems and Software},
  volume = {171},
  pages = {110846},
  issn = {01641212},
  doi = {10.1016/j.jss.2020.110846},
  abstract = {Game engines help developers create video games and avoid duplication of code and effort, like frameworks for traditional software systems. In this paper, we explore open-source game engines along three perspectives: literature, code, and human. First, we explore and summarize the academic literature on game engines. Second, we compare the characteristics of the 282 most popular engines and the 282 most popular frameworks in GitHub. Finally, we survey 124 engine developers about their experience with the development of their engines. We report that: (1) Game engines are not well-studied in software-engineering research with few studies having engines as object of research. (2) Open-source game engines are slightly larger in terms of size and complexity and less popular and engaging than traditional frameworks. Their programming languages differ greatly from frameworks. Engine projects have shorter histories with less releases. (3) Developers perceive game engines as different from traditional frameworks. Generally, they build game engines to (a) better control the environment and source code, (b) learn about game engines, and (c) develop specific games. We conclude that open-source game engines have differences compared to traditional open-source frameworks although this differences do not demand special treatments.},
  langid = {english},
  annotation = {4 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiAreGameEngines2021b-zotero.md;/home/polako/Zotero/storage/J4IN875V/Politowski et al. - 2021 - Are game engines software frameworks A three-pers.pdf}
}

@inproceedings{politowskiAreOldDays2016,
  title = {Are the Old Days Gone?: A Survey on Actual Software Engineering Processes in Video Game Industry},
  shorttitle = {Are the Old Days Gone?},
  booktitle = {Proceedings of the 5th {{International Workshop}} on {{Games}} and {{Software Engineering}} - {{GAS}} '16},
  author = {Politowski, Cristiano and Fontoura, Lisandra and Petrillo, Fabio and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
  year = {2016},
  pages = {22--28},
  publisher = {{ACM Press}},
  address = {{Austin, Texas}},
  doi = {10.1145/2896958.2896960},
  abstract = {In the past 10 years, several researches studied video game development process who proposed approaches to improve the way how games are developed. These approaches usually adopt agile methodologies because of claims that traditional practices and the waterfall process are gone. However, are the ``old days'' really gone in the game industry? In this paper, we present a survey of software engineering processes in video game industry from postmortem project analyses. We analyzed 20 postmortems from Gamasutra Portal. We extracted their processes and modelled them through using the Business Process Model and Notation (BPMN).},
  isbn = {978-1-4503-4160-8},
  langid = {english},
  annotation = {14 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiAreOldDays2016-zotero.md;/home/polako/Zotero/storage/D4Y4BB3A/Politowski et al. - 2016 - Are the old days gone a survey on actual softwar.pdf}
}

@inproceedings{politowskiDatasetVideoGame2020,
  title = {Dataset of {{Video Game Development Problems}}},
  booktitle = {Proceedings of the 17th {{International Conference}} on {{Mining Software Repositories}}},
  author = {Politowski, Cristiano and Petrillo, Fabio and Ullmann, Gabriel Cavalheiro and {de Andrade Werly}, Josias and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
  year = {2020},
  month = jun,
  pages = {553--557},
  publisher = {{ACM}},
  address = {{Seoul Republic of Korea}},
  doi = {10.1145/3379597.3387486},
  abstract = {Different from traditional software development, there is little information about the software-engineering process and techniques in video-game development. One popular way to share knowledge among the video-game developers' community is the publishing of postmortems, which are documents summarizing what happened during the video-game development project. However, these documents are written without formal structure and often providing disparate information. Through this paper, we provide developers and researchers with grounded dataset describing software-engineering problems in video-game development extracted from postmortems. We created the dataset using an iterative method through which we manually coded more than 200 postmortems spanning 20 years (1998 to 2018) and extracted 1,035 problems related to software engineering while maintaining traceability links to the postmortems. We grouped the problems in 20 different types. This dataset is useful to understand the problems faced by developers during video-game development, providing researchers and practitioners a starting point to study video-game development in the context of software engineering.},
  isbn = {978-1-4503-7517-7},
  langid = {english},
  annotation = {2 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiDatasetVideoGame2020-zotero.md;/home/polako/Zotero/storage/AYXLW32S/Politowski et al. - 2020 - Dataset of Video Game Development Problems.pdf}
}

@article{politowskiGameIndustryProblems2021b,
  title = {Game Industry Problems: {{An}} Extensive Analysis of the Gray Literature},
  shorttitle = {Game Industry Problems},
  author = {Politowski, Cristiano and Petrillo, Fabio and Ullmann, Gabriel C. and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
  year = {2021},
  month = jun,
  journal = {Information and Software Technology},
  volume = {134},
  pages = {106538},
  issn = {09505849},
  doi = {10.1016/j.infsof.2021.106538},
  abstract = {Context: Given its competitiveness, the video-game industry has a closed-source culture. Hence, little is known about the problems faced by game developers. However, game developers do share information about their game projects through postmortems, which describe informally what happened during the projects.},
  langid = {english},
  annotation = {6 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiGameIndustryProblems2021b-zotero.md;/home/polako/Zotero/storage/TRFQ54T4/Politowski et al. - 2021 - Game industry problems An extensive analysis of t.pdf}
}

@article{politowskiLargeScaleEmpirical2020a,
  title = {A Large Scale Empirical Study of the Impact of {{Spaghetti Code}} and {{Blob}} Anti-Patterns on Program Comprehension},
  author = {Politowski, Cristiano and Khomh, Foutse and Romano, Simone and Scanniello, Giuseppe and Petrillo, Fabio and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Maiga, Abdou},
  year = {2020},
  month = jun,
  journal = {Information and Software Technology},
  volume = {122},
  pages = {106278},
  issn = {09505849},
  doi = {10.1016/j.infsof.2020.106278},
  abstract = {Objective: In this work, we provide a complete assessment of the impact of two instances of two anti-patterns, Blob or Spaghetti Code, on program comprehension. Method: We analyze the impact of these two anti-patterns through three empirical studies conducted at Polytechnique Montr\'e al (Canada) with 24 participants; at Carlton University (Canada) with 30 participants; and at University Basilicata (Italy) with 79 participants. Results: We collect data from 372 tasks obtained thanks to 133 different participants from the three universities. We use three metrics to assess the developers' comprehension of the source code: (1) the duration to complete each task; (2) their percentage of correct answers; and, (3) the NASA task load index for their effort. Conclusions: We report that, although single occurrences of Blob or Spaghetti code anti-patterns have little effect on code comprehension, two occurrences of either Blob or Spaghetti Code significantly increases the developers' time spent in their tasks, reduce their percentage of correct answers, and increase their effort. Hence, we recommend that developers act on both anti-patterns, which should be refactored out of the source code whenever possible. We also recommend further studies on combinations of anti-patterns rather than on single anti-patterns one at a time.},
  langid = {english},
  annotation = {7 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiLargeScaleEmpirical2020a-zotero.md;/home/polako/Zotero/storage/M8RVRVLQ/Politowski et al. - 2020 - A large scale empirical study of the impact of Spa.pdf}
}

@article{politowskiLearningProcessRecommendation2018b,
  title = {Learning from the Past: {{A}} Process Recommendation System for Video Game Projects Using Postmortems Experiences},
  shorttitle = {Learning from the Past},
  author = {Politowski, Cristiano and Fontoura, Lisandra M. and Petrillo, Fabio and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
  year = {2018},
  month = aug,
  journal = {Information and Software Technology},
  volume = {100},
  pages = {103--118},
  issn = {09505849},
  doi = {10.1016/j.infsof.2018.04.003},
  abstract = {Context: The video game industry is a billion dollar industry that faces problems in the way games are developed. One method to address these problems is using developer aid tools, such as Recommendation Systems. These tools assist developers by generating recommendations to help them perform their tasks.},
  langid = {english},
  annotation = {6 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiLearningProcessRecommendation2018b-zotero.md;/home/polako/Zotero/storage/R77PQZII/Politowski et al. - 2018 - Learning from the past A process recommendation s.pdf}
}

@inproceedings{politowskiSurveyVideoGame2021a,
  title = {A {{Survey}} of {{Video Game Testing}}},
  booktitle = {2021 {{IEEE}}/{{ACM International Conference}} on {{Automation}} of {{Software Test}} ({{AST}})},
  author = {Politowski, Cristiano and Petrillo, Fabio and Gueheneuc, Yann-Gael},
  year = {2021},
  month = may,
  pages = {90--99},
  publisher = {{IEEE}},
  address = {{Madrid, Spain}},
  doi = {10.1109/AST52587.2021.00018},
  abstract = {Video-game projects are notorious for having dayone bugs, no matter how big their budget or team size. The quality of a game is essential for its success. This quality could be assessed and ensured through testing. However, to the best of our knowledge, little is known about video-game testing. In this paper, we want to understand how game developers perform game testing. We investigate, through a survey, the academic and gray literature to identify and report on existing testing processes and how they could automate them. We found that game developers rely, almost exclusively, upon manual play-testing and the testers' intrinsic knowledge. We conclude that current testing processes fall short because of their lack of automation, which seems to be the natural next step to improve the quality of games while maintaining costs. However, the current game-testing techniques may not generalize to different types of games.},
  isbn = {978-1-66543-567-3},
  langid = {english},
  annotation = {1 citations (Crossref) [2022-08-23]},
  file = {/home/polako/Downloads/politowskiSurveyVideoGame2021a-zotero.md;/home/polako/Zotero/storage/WHWC9L4V/Politowski et al. - 2021 - A Survey of Video Game Testing.pdf}
}


